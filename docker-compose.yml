version: '3.8'

services:
  parsacv:
    build: .
    container_name: parsacv-analyzer
    ports:
      - "${STREAMLIT_SERVER_PORT:-8501}:8501"
    volumes:
      # Mount local directories for persistent storage
      - ./outputs:/app/outputs
      - ./samples:/app/samples
      - ./temp_cvs:/app/temp_cvs
    environment:
      - STREAMLIT_SERVER_PORT=${STREAMLIT_SERVER_PORT:-8501}
      - STREAMLIT_SERVER_ADDRESS=${STREAMLIT_SERVER_ADDRESS:-0.0.0.0}
      - STREAMLIT_SERVER_HEADLESS=${STREAMLIT_SERVER_HEADLESS:-true}
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=${STREAMLIT_BROWSER_GATHER_USAGE_STATS:-false}
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

# Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: parsacv-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - parsacv
    restart: unless-stopped
    profiles:
      - production

# Optional: Database for storing analysis results
  postgresql:
    image: postgres:15-alpine
    container_name: parsacv-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-parsacv}
      POSTGRES_USER: ${POSTGRES_USER:-parsacv_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?Please set POSTGRES_PASSWORD in .env file}
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles:
      - database

volumes:
  postgres_data:

networks:
  default:
    name: parsacv-network